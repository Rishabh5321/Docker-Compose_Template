---
services:
  traefik:
    image: traefik:${TRAEFIK_VERSION}
    container_name: traefik
    command:
      - "--api.insecure=true" 
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--log.level=INFO"
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"
    volumes:
      - ${TRAEFIK_ACME_PATH}:/acme
      - ${DOCKER_SOCKET_PATH}:/var/run/docker.sock:ro
    networks:
      - proxy_network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.${BASE_DOMAIN}`)"
      - "traefik.http.routers.traefik-dashboard.entrypoints=web" 
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "glance.name=Traefik"
      - "glance.icon=sh:traefik"
      - "glance.url=http://traefik.${BASE_DOMAIN}/"
      - "glance.description=Proxy Management"

  glance:
    container_name: glance
    image: glanceapp/glance:${GLANCE_VERSION}
    restart: unless-stopped
    volumes:
      - ${DOCKER_CONFIG_BASE}/Glance_Config:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.${BASE_DOMAIN}`)"
      - "traefik.http.routers.dashboard.entrypoints=web" 
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
      - "glance.name=Glance"
      - "glance.icon=sh:glance"
      - "glance.url=http://dashboard.${BASE_DOMAIN}/"
      - "glance.description=Service Overview"
    networks:
    - proxy_network 
     
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:${QBITTORRENT_VERSION}
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - ${DOCKER_CONFIG_BASE}/Qbittorrent_Config:/config
      - ${MEDIA_DOWNLOADS_PATH}:/downloads
      - ${MEDIA_LIBRARY_PATH_RAID}:/mnt/Raid/Learn/Bonus 
    ports:
      - 6881:6881
      - 6881:6881/udp
    labels:
      - "glance.name=qBittorrent"
      - "glance.icon=sh:qbittorrent"
      - "glance.url=http://qbit.${BASE_DOMAIN}/"
      - "glance.description=Torrent Client"
      - "traefik.enable=true"
      - "traefik.http.routers.qbit.rule=Host(`qbit.${BASE_DOMAIN}`)"
      - "traefik.http.routers.qbit.entrypoints=web" 
      - "traefik.http.services.qbit.loadbalancer.server.port=8080"
    networks:
      - proxy_network
    restart: unless-stopped

  resilio-sync:
    image: lscr.io/linuxserver/resilio-sync:${RESILIO_VERSION}
    container_name: resilio-sync
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_CONFIG_BASE}/Resilio_Config:/config
      - ${MEDIA_DOWNLOADS_PATH}:/downloads
      - ${MEDIA_LIBRARY_PATH_RAID}/Music:/sync
    networks:
      - proxy_network
    ports:
      - 55555:55555
    labels:
      - "glance.name=Resilio Sync"
      - "glance.icon=sh:resilio-sync"
      - "glance.url=http://resilio.${BASE_DOMAIN}/"
      - "glance.description=File Sync Service"
      - "traefik.enable=true"
      - "traefik.http.routers.resilio.rule=Host(`resilio.${BASE_DOMAIN}`)"
      - "traefik.http.routers.resilio.entrypoints=web"
      - "traefik.http.services.resilio.loadbalancer.server.port=8888"
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:${PORTAINER_VERSION}
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /portainer_data:/data
    labels:
      - "glance.name=Portainer"
      - "glance.icon=sh:portainer"
      - "glance.url=http://portainer.${BASE_DOMAIN}/"
      - "glance.description=Docker Management"
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.${BASE_DOMAIN}`)"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    networks:
      - proxy_network
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:${PROWLARR_VERSION}
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - proxy_network
    labels:
      - "glance.name=Prowlarr"
      - "glance.icon=sh:prowlarr"
      - "glance.url=http://prowlarr.${BASE_DOMAIN}/"
      - "glance.description=Indexer Manager"
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.${BASE_DOMAIN}`)"
      - "traefik.http.routers.prowlarr.entrypoints=web"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
    volumes:
      - ${DOCKER_CONFIG_BASE}/Prowlarr_Config:/config
    restart: unless-stopped

  jackett:
    image: lscr.io/linuxserver/jackett:${JACKETT_VERSION}
    container_name: jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - AUTO_UPDATE=true
      - TZ=${TZ}
    labels:
      - "glance.name=Jackett"
      - "glance.icon=sh:jackett"
      - "glance.url=http://jackett.${BASE_DOMAIN}/"
      - "glance.description=Indexer Manager"
      - "traefik.enable=true"
      - "traefik.http.routers.jackett.rule=Host(`jackett.${BASE_DOMAIN}`)"
      - "traefik.http.routers.jackett.entrypoints=web"
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"
    networks:
      - proxy_network
    volumes:
      - ${DOCKER_CONFIG_BASE}/Jackett_Config:/config
      - ${MEDIA_DOWNLOADS_PATH}:/downloads
    restart: unless-stopped


  jellyfin:
    image: lscr.io/linuxserver/jellyfin:${JELLYFIN_VERSION}
    container_name: jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - JELLYFIN_PublishedServerUrl=http://jellyfin.server
    devices:
      - "${DRI_DEVICE_PATH}:/dev/dri" 
    networks:
      - proxy_network
    volumes:
      - ${DOCKER_CONFIG_BASE}/JellyFin_Docker:/config
      - ${MEDIA_LIBRARY_PATH_RAID}:/data
      - ${MEDIA_LIBRARY_PATH_EDISK}:/data1
    labels:
      - "glance.name=Jellyfin"
      - "glance.icon=sh:jellyfin"
      - "glance.url=http://jellyfin.${BASE_DOMAIN}/"
      - "glance.description=Movies & TV Shows"
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.${BASE_DOMAIN}`)"
      - "traefik.http.routers.jellyfin.entrypoints=web"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
    # ports:
    #   - 8920:8920 
    #   - 7359:7359/udp 
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:${SONARR_VERSION}
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - proxy_network
    volumes:
      - ${DOCKER_CONFIG_BASE}/Sonarr_Config:/config
      - ${MEDIA_LIBRARY_PATH_RAID}:/data
      - ${MEDIA_LIBRARY_PATH_EDISK}:/data1
      - ${MEDIA_DOWNLOADS_PATH}:/downloads
    labels:
      - "glance.name=Sonarr"
      - "glance.icon=sh:sonarr"
      - "glance.url=http://sonarr.${BASE_DOMAIN}/"
      - "glance.description=TV Shows Management"
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${BASE_DOMAIN}`)"
      - "traefik.http.routers.sonarr.entrypoints=web"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    restart: unless-stopped

  filebrowser:
    image: hurlenko/filebrowser:${FILEBROWSER_VERSION}
    container_name: filebrowser
    user: "${PUID}:${PGID}" 
    volumes:
      - ${HOST_MNT_PATH}:/data/mnt
      - ${HOST_HOME_PATH}:/data/home
      - ${DOCKER_CONFIG_BASE}/FileBrowser_Config:/config
    labels:
      - "glance.name=File Browser"
      - "glance.icon=http://file.server/filebrowser/static/img/logo.svg"
      - "glance.url=http://file.${BASE_DOMAIN}/"
      - "glance.description=File browser"
      - "traefik.enable=true"
      - "traefik.http.routers.file.rule=Host(`file.${BASE_DOMAIN}`)"
      - "traefik.http.routers.file.entrypoints=web"
      - "traefik.http.services.file.loadbalancer.server.port=8080"
    networks:
      - proxy_network
    restart: always

  watchtower:
    image: containrrr/watchtower:${WATCHTOWER_VERSION}
    container_name: watchtower
    volumes:
      - ${DOCKER_SOCKET_PATH}:/var/run/docker.sock
    ports:
      - 2800:8080 
    command: --debug --http-api-update --schedule "${WATCHTOWER_SCHEDULE}" --cleanup --http-api-metrics --http-api-periodic-polls # Use variable
    environment:
      - TZ=${TZ}
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
      - WATCHTOWER_NOTIFICATION_URL=${WATCHTOWER_TELEGRAM_URL}
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_HTTP_API_METRICS=true
      - WATCHTOWER_HTTP_API_PERIODIC_POLLS=true
      - WATCHTOWER_HTTP_API_TOKEN=${WATCHTOWER_API_TOKEN} 
    labels:
      - "glance.name=Watchtowerr"
      - "glance.icon=https://raw.githubusercontent.com/containrrr/watchtower/main/logo.png"
      - "glance.description=Image Updater"
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:${RADARR_VERSION}
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_CONFIG_BASE}/Radarr_Config:/config
      - ${MEDIA_LIBRARY_PATH_RAID}:/data
      - ${MEDIA_LIBRARY_PATH_EDISK}:/data1
      - ${MEDIA_DOWNLOADS_PATH}:/downloads 
    labels:
      - "glance.name=Radarr"
      - "glance.icon=sh:radarr"
      - "glance.url=http://radarr.${BASE_DOMAIN}/"
      - "glance.description=Movie Downloader"
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${BASE_DOMAIN}`)"
      - "traefik.http.routers.radarr.entrypoints=web"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    networks:
      - proxy_network
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr:${BAZARR_VERSION}
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_CONFIG_BASE}/Bazarr_Docker:/config
      - ${MEDIA_LIBRARY_PATH_RAID}:/data
      - ${MEDIA_LIBRARY_PATH_EDISK}:/data1
    labels:
      - "glance.name=Bazarr"
      - "glance.icon=https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/bazarr.png"
      - "glance.url=http://bazarr.${BASE_DOMAIN}/"
      - "glance.description=Subtitle Downloader"
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.${BASE_DOMAIN}`)"
      - "traefik.http.routers.bazarr.entrypoints=web"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
    networks:
      - proxy_network
    restart: unless-stopped

  jellyseerr:
    image: fallenbagel/jellyseerr:${JELLYSEERR_VERSION}
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=info 
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "glance.name=Jellyseerr"
      - "glance.icon=sh:jellyseerr"
      - "glance.url=http://jellyseerr.${BASE_DOMAIN}/"
      - "glance.description=Request Manager"
      - "traefik.enable=true"
      - "traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.${BASE_DOMAIN}`)"
      - "traefik.http.routers.jellyseerr.entrypoints=web"
      - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"
    networks:
      - proxy_network
    volumes:
      - ${DOCKER_CONFIG_BASE}/Jellyseer_Config:/app/config
    restart: unless-stopped

  duplicati:
    image: lscr.io/linuxserver/duplicati:${DUPLICATI_VERSION}
    container_name: duplicati
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - SETTINGS_ENCRYPTION_KEY=${DUPLICATI_SETTINGS_KEY}
      - DUPLICATI__WEBSERVICE_PASSWORD=${DUPLICATI_PASSWORD}
    volumes:
      - ${DOCKER_CONFIG_BASE}/Duplicati_Config:/config
      - ${BACKUP_PATH}:/backups
      - ${DOCKER_CONFIG_MNT}/:/source
      - ${HOST_MNT_PATH}:/data
    labels:
      - "glance.name=Duplicati"
      - "glance.icon=sh:duplicati"
      - "glance.url=http://duplicati.${BASE_DOMAIN}/"
      - "glance.description=Backups"
      - "traefik.enable=true"
      - "traefik.http.routers.duplicati.rule=Host(`duplicati.${BASE_DOMAIN}`)"
      - "traefik.http.routers.duplicati.entrypoints=web"
      - "traefik.http.services.duplicati.loadbalancer.server.port=8200"
    networks:
      - proxy_network
    restart: unless-stopped

  suwayomi: # Tachidesk service
    image: ghcr.io/suwayomi/tachidesk:${TACHIDESK_VERSION}
    container_name: tachidesk
    environment:
      - TZ=${TZ}
      - PUID=${PUID} 
      - PGID=${PGID}
      - FLARESOLVERR_ENABLED=true
      - FLARESOLVERR_URL=http://flaresolverr:8191
    volumes:
      - ${DOCKER_CONFIG_BASE}/Tachiyomi_Config:/home/suwayomi/.local/share/Tachidesk
    labels:
      - "glance.name=Tachidesk"
      - "glance.icon=https://raw.githubusercontent.com/Suwayomi/Suwayomi-Server/master/server/src/main/resources/icon/faviconlogo.png"
      - "glance.url=http://tachidesk.${BASE_DOMAIN}/"
      - "glance.description=Manga Server"
      - "glance.id=tachidesk"
      - "traefik.enable=true"
      - "traefik.http.routers.tachidesk.rule=Host(`tachidesk.${BASE_DOMAIN}`)"
      - "traefik.http.routers.tachidesk.entrypoints=web"
      - "traefik.http.services.tachidesk.loadbalancer.server.port=4567"
    networks:
      - proxy_network
    depends_on:
      - flaresolverr
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:${FLARESOLVERR_VERSION}
    container_name: flaresolverr
    environment:
      - TZ=${TZ}
    labels:
      - "glance.parent=tachidesk"
      - "glance.name=solver"
      - "traefik.enable=true"
      - "traefik.http.routers.flaresolverr.rule=Host(`flaresolverr.${BASE_DOMAIN}`)"
      - "traefik.http.routers.flaresolverr.entrypoints=web"
      - "traefik.http.services.flaresolverr.loadbalancer.server.port=8191"
    networks:
      - proxy_network
    restart: unless-stopped

  free-games-claimer:
    image: ghcr.io/vogler/free-games-claimer:${FREE_GAMES_CLAIMER_VERSION}
    container_name: free-games-claimer
    command: bash -c "node epic-games; node gog; echo sleeping; sleep 1d"
    environment:
      - NOTIFY=${FREE_GAMES_NOTIFY_URL} 
      - NOTIFY_TITLE=My Free Games Claimer
      - GOG_EMAIL=${GOG_EMAIL}
      - GOG_PASSWORD=${GOG_PASSWORD}
    labels:
      - "glance.name=Free Games Claimer"
      - "glance.icon=https://raw.githubusercontent.com/game-icons/icons/846f3e9699d4199e35aeb9b454b4d07809c3441a/delapouite/gamepad.svg"
      - "glance.url=http://game.${BASE_DOMAIN}/"
      - "glance.description=Free Games Claimer"
      - "traefik.enable=true"
      - "traefik.http.routers.game.rule=Host(`game.${BASE_DOMAIN}`)"
      - "traefik.http.routers.game.entrypoints=web"
      - "traefik.http.services.game.loadbalancer.server.port=6080"
    volumes:
      - ${DOCKER_CONFIG_BASE}/Free_Game_Claim_Config:/fgc/data
    networks:
      - proxy_network
    restart: unless-stopped

  syncify:
    image: thewicklowwolf/syncify:${SYNCIFY_VERSION}
    container_name: syncify
    volumes:
      - ${DOCKER_CONFIG_BASE}/Syncify_Config:/syncify/config
      - ${MEDIA_LIBRARY_PATH_RAID}/Music:/syncify/downloads
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "glance.name=Syncify"
      - "glance.icon=https://raw.githubusercontent.com/TheWicklowWolf/Syncify/main/src/static/syncify_full_logo.png"
      - "glance.url=http://syncify.${BASE_DOMAIN}/"
      - "glance.description=Spotify Downloader"
      - "traefik.enable=true"
      - "traefik.http.routers.syncify.rule=Host(`syncify.${BASE_DOMAIN}`)"
      - "traefik.http.routers.syncify.entrypoints=web"
      - "traefik.http.services.syncify.loadbalancer.server.port=5000"
    environment:
      - thread_limit=${SYNCIFY_THREAD_LIMIT:-5}
      - crop_album_art=${SYNCIFY_CROP_ALBUM_ART:-false}
      - PUID=${PUID} 
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - proxy_network
    restart: unless-stopped

volumes:
  portainer_data:
    external: true

networks:
  proxy_network:
    driver: bridge